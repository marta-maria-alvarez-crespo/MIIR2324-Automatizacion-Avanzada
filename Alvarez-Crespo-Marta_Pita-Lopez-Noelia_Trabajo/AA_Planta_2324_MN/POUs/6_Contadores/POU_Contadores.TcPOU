<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="POU_Contadores" Id="{379e697d-f57d-4e98-8ff8-dde695db2a2f}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM POU_Contadores
VAR
	iCintaProcesando : INT := 0;
	iStackBoxProcesando: INT := 0;
	iCajaProcesando : INT := 0;
	bGuardandoCaja: BOOL := 0;
	iProcesandoCintas: INT := 0;
	
	reDifSensorSorting: R_TRIG;
	feRRefSensorSortingA: F_TRIG;
	feRRefSensorSortingV: F_TRIG;
	reDifSensorSortingM: F_TRIG;
	fTrigRRefSensorAlmacen: F_TRIG;
	tFTrigEmitterA: F_TRIG;
	tFTrigEmitterV: F_TRIG;
	tFTrigEmitterM: F_TRIG;
	tFTrigDiffuseSensor : F_TRIG;
	
	fFtrigRobotSeMueveA : F_TRIG;
	fFtrigRobotSeMueveV : F_TRIG;
	fFtrigRobotSeMueveM : F_TRIG;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[reDifSensorSorting(CLK:= GVL_Sorting.bDiffuseSensorA);
feRRefSensorSortingA(CLK:= GVL_StackBox.bRReflectiveSensorA1);
feRRefSensorSortingV (CLK:= GVL_StackBox.bRReflectiveSensorV1); 
reDifSensorSortingM (CLK:= GVL_Sorting.bDiffuseSensorM);
tFTrigDiffuseSensor(CLK:= GVL_ProcesoPalet.bDiffuseSensorSalida);
fTrigRRefSensorAlmacen(CLK:= GVL_Almacen.bRRflexSensorAlmacen);
tFTrigEmitterA(CLK:= GVL_ProcesoPalet.iLightArrayEmitterA);
tFTrigEmitterV(CLK:= GVL_ProcesoPalet.iLightArrayEmitterV);
tFTrigEmitterM(CLK:= GVL_ProcesoPalet.iLightArrayEmitterM);

fFtrigRobotSeMueveA(CLK:= POU_PickAndPlace.RobotSeMueveA);
fFtrigRobotSeMueveV(CLK:= POU_PickAndPlace.RobotSeMueveV);
fFtrigRobotSeMueveM(CLK:= POU_PickAndPlace.RobotSeMueveM);

// SECCION 1 
(* Sumamos 1 al contador si se comienza a procesar una pieza y se resta 1 cuando se termina de procesar *)

IF reDifSensorSorting.Q THEN
	iCintaProcesando := iCintaProcesando + 1;
END_IF

IF feRRefSensorSortingA.Q THEN
	iCintaProcesando := iCintaProcesando - 1;
END_IF

IF feRRefSensorSortingV.Q THEN
	iCintaProcesando := iCintaProcesando - 1;
END_IF

IF reDifSensorSortingM.Q THEN
	iCintaProcesando := iCintaProcesando - 1;
END_IF


// SECCION 2 
(* Sumamos 1 al contador si se comienza a procesar una pieza y se resta 1 cuando se termina de procesar *)

IF feRRefSensorSortingA.Q THEN
	iStackBoxProcesando := iStackBoxProcesando + 1;
END_IF

IF feRRefSensorSortingV.Q THEN
	iStackBoxProcesando := iStackBoxProcesando + 1;
END_IF

IF reDifSensorSortingM.Q THEN
	iStackBoxProcesando := iStackBoxProcesando + 1;
END_IF


IF fFtrigRobotSeMueveA.Q THEN
	iStackBoxProcesando := iStackBoxProcesando - 1;
END_IF

IF fFtrigRobotSeMueveV.Q THEN
	iStackBoxProcesando := iStackBoxProcesando - 1;
END_IF

IF fFtrigRobotSeMueveM.Q THEN
	iStackBoxProcesando := iStackBoxProcesando - 1;
END_IF

// SECCION 3 
(* Sumamos 1 al contador si se comienza a procesar una pieza y se resta 1 cuando se termina de procesar *)

IF tFTrigEmitterV.Q THEN
	iCajaProcesando := iCajaProcesando + 1;
END_IF

IF tFTrigEmitterA.Q THEN
	iCajaProcesando := iCajaProcesando + 1;
END_IF

IF tFTrigEmitterM.Q THEN
	iCajaProcesando := iCajaProcesando + 1;
END_IF

IF tFTrigDiffuseSensor.Q THEN
	iCajaProcesando := iCajaProcesando - 1;
END_IF


// SECCION 4
(* Sumamos 1 al contador si se comienza a procesar una pieza a través de los roller conveyor y restamos cuando termina de procesar *)

IF tFTrigDiffuseSensor.Q THEN
	iProcesandoCintas := iProcesandoCintas + 1;
END_IF

IF fTrigRRefSensorAlmacen.Q THEN
	iProcesandoCintas := iProcesandoCintas - 1;
END_IF


// SECCION 5 
(* Sumamos 1 al contador si se comienza a procesar una pieza y se resta 1 cuando se termina de procesar *)

IF PRG_Almacen.ALMACEN > 1 THEN
	bGuardandoCaja := TRUE;
END_IF

IF PRG_Almacen.ALMACEN < 2 THEN
	bGuardandoCaja := FALSE;
END_IF]]></ST>
    </Implementation>
    <LineIds Name="POU_Contadores">
      <LineId Id="7" Count="3" />
      <LineId Id="50" Count="0" />
      <LineId Id="75" Count="0" />
      <LineId Id="86" Count="1" />
      <LineId Id="84" Count="0" />
      <LineId Id="171" Count="0" />
      <LineId Id="167" Count="0" />
      <LineId Id="166" Count="0" />
      <LineId Id="165" Count="0" />
      <LineId Id="65" Count="0" />
      <LineId Id="12" Count="9" />
      <LineId Id="112" Count="0" />
      <LineId Id="111" Count="0" />
      <LineId Id="116" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="117" Count="0" />
      <LineId Id="113" Count="2" />
      <LineId Id="119" Count="0" />
      <LineId Id="118" Count="0" />
      <LineId Id="23" Count="1" />
      <LineId Id="123" Count="10" />
      <LineId Id="25" Count="0" />
      <LineId Id="28" Count="4" />
      <LineId Id="136" Count="0" />
      <LineId Id="135" Count="0" />
      <LineId Id="139" Count="0" />
      <LineId Id="138" Count="0" />
      <LineId Id="141" Count="0" />
      <LineId Id="140" Count="0" />
      <LineId Id="142" Count="1" />
      <LineId Id="33" Count="2" />
      <LineId Id="108" Count="0" />
      <LineId Id="66" Count="1" />
      <LineId Id="92" Count="0" />
      <LineId Id="94" Count="0" />
      <LineId Id="101" Count="2" />
      <LineId Id="95" Count="0" />
      <LineId Id="104" Count="2" />
      <LineId Id="96" Count="2" />
      <LineId Id="107" Count="0" />
      <LineId Id="100" Count="0" />
      <LineId Id="36" Count="1" />
      <LineId Id="62" Count="0" />
      <LineId Id="68" Count="2" />
      <LineId Id="64" Count="0" />
      <LineId Id="72" Count="2" />
      <LineId Id="63" Count="0" />
      <LineId Id="110" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="77" Count="0" />
      <LineId Id="61" Count="0" />
      <LineId Id="78" Count="1" />
      <LineId Id="82" Count="0" />
      <LineId Id="80" Count="1" />
      <LineId Id="60" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>