<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="PRG_Turntable" Id="{4632a491-dbef-4586-9e55-e4a069d82d54}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM PRG_Turntable
VAR
	Turntable : CTURNTABLE;

	
	SaleCajaA : BOOL;
	SaleCajaV : BOOL;
	SaleCajaM : BOOL;
	

	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE Turntable OF
	
	CTURNTABLE_ESPERA:
	(* Dependiendo de las detecciones de los sensores, se activarám según qué líneas*)
	
	IF POU_PickAndPlace.CajaLlenaA THEN
		SaleCajaA := TRUE;
		GVL_ProcesoPalet.sRollerConveyor.bRollerAzul1 := TRUE;
		GVL_ProcesoPalet.sRollerConveyor.bCurvedRollerAzul1 := TRUE;
		Turntable := CTURNTABLE_FILTROPRIORIDAD;
	END_IF
	
	IF POU_PickAndPlace.CajaLlenaV THEN
		SaleCajaV := TRUE;
		GVL_ProcesoPalet.sRollerConveyor.bRollerVerde1 := TRUE;
		Turntable := CTURNTABLE_FILTROPRIORIDAD;
	END_IF
	
	IF POU_PickAndPlace.CajaLlenaM THEN
		SaleCajaM := TRUE;
		GVL_ProcesoPalet.sRollerConveyor.bRollerMetal1 := TRUE;
		GVL_ProcesoPalet.sRollerConveyor.bCurvedRollerMetal1 := TRUE;
		Turntable := CTURNTABLE_FILTROPRIORIDAD;
	END_IF
	
	
	CTURNTABLE_FILTROPRIORIDAD:
	(* Dependiendo de las detecciones de los sensores, se girará a una posición u otra*)
	
	IF GVL_ProcesoPalet.bDiffuseSensorPaletA THEN
		SaleCajaA := FALSE;
		//GVL_ProcesoPalet.sRollerConveyor.bRollerAzul1 := FALSE;
		GVL_ProcesoPalet.sRollerConveyor.bCurvedRollerAzul1 := FALSE;
		TURNTABLE := CTURNTABLE_CARGAAZUL;
	END_IF
	
	IF GVL_ProcesoPalet.bDiffuseSensorPaletV THEN
		GVL_ProcesoPalet.sRollerConveyor.bRollerVerde1 := FALSE;
		TURNTABLE := CTURNTABLE_CARGAVERDE;
	END_IF
	
	IF GVL_ProcesoPalet.bDiffuseSensorPaletM THEN
		//GVL_ProcesoPalet.sRollerConveyor.bRollerMetal1 := FALSE;
		GVL_ProcesoPalet.sRollerConveyor.bCurvedRollerMetal1 := FALSE;
		TURNTABLE := CTURNTABLE_CARGAMETAL;
	END_IF
		
	
	CTURNTABLE_CARGAAZUL:
	(* Proceso de carga para la caja azul *)
	
	GVL_ProcesoPalet.sTurnTable.Turn := TRUE;
	GVL_ProcesoPalet.sTurnTable.RollPositivo := TRUE;
	
	IF GVL_ProcesoPalet.sTurnTable.Limit90 THEN
		TURNTABLE := CTURNTABLE_DESCARGAAZUL;
	END_IF	
	
	
	CTURNTABLE_DESCARGAAZUL:
	(* Proceso de descarga para la caja azul *)
	
	GVL_ProcesoPalet.sRollerConveyor.bCurvedRollerAzul1 := TRUE;
	IF GVL_ProcesoPalet.sTurnTable.FrontLimit THEN
		GVL_ProcesoPalet.sTurnTable.RollPositivo := FALSE;
		GVL_ProcesoPalet.sTurnTable.Turn := FALSE;
	END_IF
	
	IF GVL_ProcesoPalet.sTurnTable.Limit0 THEN
		GVL_ProcesoPalet.sTurnTable.RollPositivo := TRUE;
		TURNTABLE := CTURNTABLE_SALIDA;
	END_IF
	
	
	CTURNTABLE_CARGAVERDE:
	(* Proceso de carga para la caja verde *)
	
	GVL_ProcesoPalet.sTurnTable.Turn := FALSE;
	IF GVL_ProcesoPalet.sTurnTable.Limit0 THEN
		GVL_ProcesoPalet.sRollerConveyor.bRollerVerde1 := TRUE;
		GVL_ProcesoPalet.sTurnTable.RollPositivo := TRUE;
		TURNTABLE := CTURNTABLE_SALIDA;
	END_IF
	
	
	CTURNTABLE_CARGAMETAL:
	(* Proceso de carga para la caja azul *)
	
	GVL_ProcesoPalet.sTurnTable.Turn := TRUE;
	GVL_ProcesoPalet.sTurnTable.RollNegativo := TRUE;
	
	IF GVL_ProcesoPalet.sTurnTable.Limit90 THEN
		TURNTABLE := CTURNTABLE_DESCARGAMETAL;
	END_IF	
	
	
	CTURNTABLE_DESCARGAMETAL:
	(* Proceso de descarga para la caja azul *)
	
	GVL_ProcesoPalet.sRollerConveyor.bCurvedRollerMetal1 := TRUE;
	IF GVL_ProcesoPalet.sTurnTable.BackLimit THEN
		GVL_ProcesoPalet.sTurnTable.RollNegativo := FALSE;
		GVL_ProcesoPalet.sTurnTable.Turn := FALSE;
	END_IF
	
	IF GVL_ProcesoPalet.sTurnTable.Limit0 THEN
		GVL_ProcesoPalet.sTurnTable.RollPositivo := TRUE;
		TURNTABLE := CTURNTABLE_SALIDA;
	END_IF
	
	
	CTURNTABLE_SALIDA:

	IF GVL_ProcesoPalet.bVisionSensorSalida = 2 THEN
		TURNTABLE := CTURNTABLE_ESPERA;
		GVL_ProcesoPalet.sTurnTable.RollPositivo := FALSE;
	END_IF
	
	IF GVL_ProcesoPalet.bVisionSensorSalida = 5 THEN
		TURNTABLE := CTURNTABLE_ESPERA;
		GVL_ProcesoPalet.sTurnTable.RollPositivo := FALSE;
	END_IF
	
	IF GVL_ProcesoPalet.bVisionSensorSalida = 8 THEN
		TURNTABLE := CTURNTABLE_ESPERA;
		GVL_ProcesoPalet.sTurnTable.RollPositivo := FALSE;
	END_IF
END_CASE]]></ST>
    </Implementation>
    <LineIds Name="PRG_Turntable">
      <LineId Id="5" Count="0" />
      <LineId Id="85" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="255" Count="0" />
      <LineId Id="40" Count="0" />
      <LineId Id="259" Count="0" />
      <LineId Id="170" Count="0" />
      <LineId Id="93" Count="0" />
      <LineId Id="42" Count="1" />
      <LineId Id="41" Count="0" />
      <LineId Id="46" Count="0" />
      <LineId Id="280" Count="0" />
      <LineId Id="63" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="50" Count="0" />
      <LineId Id="48" Count="0" />
      <LineId Id="281" Count="0" />
      <LineId Id="172" Count="0" />
      <LineId Id="65" Count="0" />
      <LineId Id="49" Count="0" />
      <LineId Id="38" Count="1" />
      <LineId Id="109" Count="0" />
      <LineId Id="75" Count="0" />
      <LineId Id="94" Count="0" />
      <LineId Id="279" Count="0" />
      <LineId Id="96" Count="0" />
      <LineId Id="260" Count="0" />
      <LineId Id="181" Count="0" />
      <LineId Id="99" Count="0" />
      <LineId Id="110" Count="0" />
      <LineId Id="104" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="100" Count="1" />
      <LineId Id="111" Count="0" />
      <LineId Id="105" Count="0" />
      <LineId Id="107" Count="0" />
      <LineId Id="102" Count="0" />
      <LineId Id="257" Count="0" />
      <LineId Id="103" Count="0" />
      <LineId Id="112" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="166" Count="0" />
      <LineId Id="95" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="71" Count="0" />
      <LineId Id="91" Count="0" />
      <LineId Id="87" Count="0" />
      <LineId Id="92" Count="0" />
      <LineId Id="115" Count="0" />
      <LineId Id="113" Count="1" />
      <LineId Id="68" Count="0" />
      <LineId Id="116" Count="0" />
      <LineId Id="139" Count="0" />
      <LineId Id="117" Count="0" />
      <LineId Id="137" Count="1" />
      <LineId Id="119" Count="2" />
      <LineId Id="123" Count="0" />
      <LineId Id="128" Count="3" />
      <LineId Id="141" Count="0" />
      <LineId Id="144" Count="0" />
      <LineId Id="150" Count="0" />
      <LineId Id="183" Count="0" />
      <LineId Id="185" Count="3" />
      <LineId Id="205" Count="0" />
      <LineId Id="238" Count="0" />
      <LineId Id="206" Count="0" />
      <LineId Id="252" Count="0" />
      <LineId Id="184" Count="0" />
      <LineId Id="209" Count="0" />
      <LineId Id="239" Count="0" />
      <LineId Id="211" Count="22" />
      <LineId Id="210" Count="0" />
      <LineId Id="151" Count="0" />
      <LineId Id="282" Count="0" />
      <LineId Id="145" Count="0" />
      <LineId Id="152" Count="0" />
      <LineId Id="147" Count="0" />
      <LineId Id="149" Count="0" />
      <LineId Id="249" Count="0" />
      <LineId Id="146" Count="0" />
      <LineId Id="165" Count="0" />
      <LineId Id="156" Count="0" />
      <LineId Id="158" Count="0" />
      <LineId Id="250" Count="0" />
      <LineId Id="163" Count="1" />
      <LineId Id="161" Count="0" />
      <LineId Id="160" Count="0" />
      <LineId Id="251" Count="0" />
      <LineId Id="159" Count="0" />
      <LineId Id="29" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>